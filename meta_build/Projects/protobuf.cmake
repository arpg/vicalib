set(EP_URL "https://github.com/google/protobuf.git")
set(EP_TAG c7457ef65a7a8584b1e3bd396c401ccf8e275ffa)
set(EP_PATCH "${CMAKE_CURRENT_LIST_DIR}/${EP_NAME}.patch")

cma_end_definition()


if("${CMAKE_BUILD_TYPE}" MATCHES "RelWithDebInfo")
  set(CMAKE_BUILD_TYPE "Release")
endif()


SET(SHARED OFF)
SET(SUFFIX ${CMAKE_STATIC_LIBRARY_SUFFIX})

set(EP_CMAKE_ARGS
  -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
  -DCMAKE_GENERATOR_TOOLSET:STRING=${CMAKE_GENERATOR_TOOLSET}
  -DCMAKE_GENERATOR_PLATFORM:STRING=${CMAKE_GENERATOR_PLATFORM}
  -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
  -Dprotobuf_BUILD_TESTS:BOOL=OFF
  -Dprotobuf_DEBUG_POSTFIX:STRING=
  -Dprotobuf_MSVC_STATIC_RUNTIME:BOOL=OFF
  -DBUILD_SHARED_LIBS:BOOL=${SHARED}
  -DCMAKE_C_COMPILER_LAUNCHER:FILEPATH=${CMAKE_C_COMPILER_LAUNCHER}
  -DCMAKE_CXX_COMPILER_LAUNCHER:FILEPATH=${CMAKE_CXX_COMPILER_LAUNCHER})

set(HOST)
set(EXECUTABLE_SUFFIX)
set(HOST_TARGET)
if(CMAKE_CROSSCOMPILING)
  #compile host apps needed for compilation
  set(HOST _host)
  set(HOST_TARGET ${EP_NAME}${HOST})
  set(CONFIG_ARG)
  set(CONFIG)
  if(${CMAKE_HOST_SYSTEM_NAME} MATCHES Windows)
    set(EXECUTABLE_SUFFIX .exe)
    set(CONFIG Release)
    set(CONFIG_ARG --config ${CONFIG})
  endif()

  ExternalProject_Add(${HOST_TARGET}
  GIT_REPOSITORY  ${EP_URL}
  GIT_TAG ${EP_TAG}
  UPDATE_DISCONNECTED 1
  SOURCE_DIR ${PROJECT_BINARY_DIR}/src/${HOST_TARGET}
  CONFIGURE_COMMAND ${CMAKE_COMMAND} ${PROJECT_BINARY_DIR}/src/${HOST_TARGET}/cmake ${EP_CMAKE_ARGS}
  BINARY_DIR ${PROJECT_BINARY_DIR}/${HOST_TARGET}-build
  BUILD_COMMAND ${CMAKE_COMMAND} --build ${PROJECT_BINARY_DIR}/${HOST_TARGET}-build ${CONFIG_ARG}
  INSTALL_DIR ${PROJECT_BINARY_DIR}/${HOST_TARGET}-install
  INSTALL_COMMAND ${CMAKE_COMMAND} --build ${PROJECT_BINARY_DIR}/${HOST_TARGET}-build --target INSTALL ${CONFIG_ARG})

  list(APPEND EP_CMAKE_ARGS
    -DCMAKE_TOOLCHAIN_FILE:FILEPATH=${CMAKE_TOOLCHAIN_FILE}
    -DCMAKE_ANDROID_NDK:PATH=${CMAKE_ANDROID_NDK}
    -DCMAKE_ANDROID_ARCH_ABI:STRING=${CMAKE_ANDROID_ARCH_ABI}
    -DCMAKE_ANDROID_NDK_TOOLCHAIN_VERSION:STRING=${CMAKE_ANDROID_NDK_TOOLCHAIN_VERSION}
    -DPROTOBUF_js_embed_EXECUTABLE:FILEPATH=${PROJECT_BINARY_DIR}/${HOST_TARGET}-build/${CONFIG}/js_embed${EXECUTABLE_SUFFIX}
    -DPROTOBUF_PROTOC_EXECUTABLE:FILEPATH=${PROJECT_BINARY_DIR}/${EP_NAME}${HOST}-install/bin/protoc${EXECUTABLE_SUFFIX}
    )

  set(EP_URL file://${PROJECT_BINARY_DIR}/${HOST_TARGET}/.git)
  set(GIT_SHALLOW GIT_SHALLOW 1)
endif()

  list(APPEND EP_CMAKE_ARGS
    -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS}
    -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}
    )


ExternalProject_Add(${EP_NAME}
  GIT_REPOSITORY  ${EP_URL}
  GIT_TAG ${EP_TAG}
  ${GIT_SHALLOW}
  UPDATE_DISCONNECTED 1
  SOURCE_DIR ${PROJECT_BINARY_DIR}/src/${EP_NAME}
  CONFIGURE_COMMAND ${CMAKE_COMMAND} ${PROJECT_BINARY_DIR}/src/${EP_NAME}/cmake -G ${CMAKE_GENERATOR} ${EP_CMAKE_ARGS}
  BINARY_DIR ${PROJECT_BINARY_DIR}/${EP_NAME}-build
  INSTALL_DIR ${PROJECT_BINARY_DIR}/${EP_NAME}-install
  DEPENDS ${HOST_TARGET})

if(WIN32)
  set(protobuf_DIR "${PROJECT_BINARY_DIR}/${EP_NAME}-install/cmake" CACHE INTERNAL "")
else()
  set(protobuf_DIR "${PROJECT_BINARY_DIR}/${EP_NAME}-install/lib/cmake/${EP_NAME}" CACHE INTERNAL "")
endif()
set(PROTOBUF_PROTOC_EXECUTABLE "${PROJECT_BINARY_DIR}/${EP_NAME}${HOST}-install/bin/protoc${EXECUTABLE_SUFFIX}" CACHE INTERNAL "")
