set(EP_REQUIRED_PROJECTS SuiteSparse Eigen GLog)
set(EP_URL "https://github.com/ceres-solver/ceres-solver.git")
set(EP_TAG 1.14.0)
set(EP_PATCH "${CMAKE_CURRENT_LIST_DIR}/${EP_NAME}.patch")

cma_end_definition()

string(REPLACE ";" "$<SEMICOLON>" BLAS_LIBRARIES_ALT_SEP "${BLAS_LIBRARIES}")

set(EP_CMAKE_ARGS
  -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
  "-DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS} ${MKL_C_FLAGS}"
  "-DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS} ${MKL_CXX_FLAGS}"
  -DCMAKE_INSTALL_RPATH:PATH=${CMAKE_INSTALL_RPATH}
  -DEIGEN_INCLUDE_DIR:PATH=${EIGEN_INCLUDE_DIR}
  -Dglog_DIR:PATH=${glog_DIR}
  -Dgflags_DIR:PATH=${gflags_DIR}
  -DBUILD_EXAMPLES:BOOL=OFF
  -DBUILD_TESTING:BOOL=OFF
  -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
  -DMSVC_USE_STATIC_CRT:BOOL=OFF
  -DBUILD_SHARED_LIBS:BOOL=ON
  -DCXSPARSE_INCLUDE_DIR:PATH=${CXSPARSE_INCLUDE_DIR}
  -DCXSPARSE_LIBRARY:FILEPATH=${CXSPARSE_LIBRARY}
  -DSUITESPARSE_INCLUDE_DIR_HINTS=${SUITESPARSE_INCLUDE_DIR_HINTS}
  -DSUITESPARSE_LIBRARY_DIR_HINTS=${SUITESPARSE_LIBRARY_DIR_HINTS}
  -DSUITESPARSE:BOOL=ON
  -DCXSPARSE:BOOL=OFF
  -DBLAS_LIBRARIES=${BLAS_LIBRARIES_ALT_SEP}
  -DLAPACK_LIBRARIES=${BLAS_LIBRARIES_ALT_SEP}
  -DBLA_STATIC:BOOL=TRUE
  -DLAPACK:BOOL=ON
  -DSCHUR_SPECIALIZATIONS:BOOL=OFF
  -DCXX11:BOOL=ON
  -DCMAKE_TOOLCHAIN_FILE:FILEPATH=${CMAKE_TOOLCHAIN_FILE}
  -DCMAKE_ANDROID_NDK:PATH=${CMAKE_ANDROID_NDK}
  -DCMAKE_ANDROID_ARCH_ABI:STRING=${CMAKE_ANDROID_ARCH_ABI}
  -DCMAKE_ANDROID_NDK_TOOLCHAIN_VERSION:STRING=${CMAKE_ANDROID_NDK_TOOLCHAIN_VERSION}
  -DCMAKE_C_COMPILER_LAUNCHER:FILEPATH=${CMAKE_C_COMPILER_LAUNCHER}
  -DCMAKE_CXX_COMPILER_LAUNCHER:FILEPATH=${CMAKE_CXX_COMPILER_LAUNCHER})


if(WIN32)
  list(APPEND EP_CMAKE_ARGS -DOPENMP:BOOL=False -DCXX11_THREADS:BOOL=ON)
endif()


ExternalProject_Add(${EP_NAME}
  DEPENDS ${EP_REQUIRED_PROJECTS}
  GIT_REPOSITORY  ${EP_URL}
  GIT_TAG ${EP_TAG}
  UPDATE_DISCONNECTED 1
  SOURCE_DIR ${PROJECT_BINARY_DIR}/src/${EP_NAME}
  CMAKE_ARGS ${EP_CMAKE_ARGS}
  BINARY_DIR ${PROJECT_BINARY_DIR}/${EP_NAME}-build
  INSTALL_DIR ${PROJECT_BINARY_DIR}/install)

if(WIN32)
    set(${EP_NAME}_DIR "${PROJECT_BINARY_DIR}/install/CMake/" CACHE INTERNAL "")
elseif(UNIX)
    set(${EP_NAME}_DIR "${PROJECT_BINARY_DIR}/install/share/${EP_NAME}" CACHE INTERNAL "")
endif()
